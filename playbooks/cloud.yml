---
- name: CLOUD | Software packages
  package:
    name: "{{ cloud_packages[ansible_distribution] }}"
    state: present

- name: CLOUD | Additional Python modules
  pip:
    name: "{{ cloud_pip_modules[ansible_distribution] }}"
  when: (cloud_pip_modules[ansible_distribution] | length > 0)

- name: CLOUD | Google Cloud repository key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when:
    - ansible_os_family == "Debian"

- name: CLOUD | Google Cloud APT repository
  apt_repository:
    repo: "deb http://packages.cloud.google.com/apt {{ item }} main"
    state: present
    filename: google-cloud
    update_cache: yes
    mode: "0644"
  with_items:
    - "cloud-sdk-{{ ansible_distribution_release if ansible_distribution_release not in ['focal', 'impish'] else 'bionic' }}"
    - "google-compute-engine-{{ ansible_distribution_release if ansible_distribution_release not in ['focal', 'impish'] else 'bionic' }}-stable"
    - "google-cloud-packages-archive-keyring-{{ ansible_distribution_release if ansible_distribution_release not in ['focal', 'impish'] else 'xenial' }}"
  when:
    - ansible_os_family == "Debian"

# Packages needed.
- name: CLOUD | Google Cloud SDK software packages
  package:
    name: "{{ google_cloud_pkgs }}"
    state: present

- name: CLOUD | Microsoft GPG key
  apt_key:
    url: "{{ ms_repo_key }}"
    state: present

- name: CLOUD | Azure CLI APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_distribution_release }} main"
    state: present
    filename: azure-cli
    update_cache: yes
    mode: "0644"
  when:
    - ansible_os_family == "Debian"

# Packages needed.
- name: CLOUD | Azure CLI software packages
  package:
    name: "{{ azure_cli_pkgs }}"
    state: present

- name: CLOUD | Microsoft repository GPG keyserver.ubuntu.com
  apt:
    deb: "https://packages.microsoft.com/config/{{ ansible_distribution | lower }}/{{ ansible_distribution_major_version if ansible_distribution_major_version == 'Debian' else ansible_distribution_major_version}}/packages-microsoft-prod.deb"
    update_cache: yes
  when:
    - ansible_os_family == "Debian"

# Packages needed.
- name: CLOUD | Powershell software packages
  package:
    name: "{{ powershell_pkgs }}"
    state: present

- name: CLOUD | Digital Ocean doctl CLI utility
  unarchive:
    src: "{{ doctl_download_url }}"
    dest: /usr/local/bin
    remote_src: yes
